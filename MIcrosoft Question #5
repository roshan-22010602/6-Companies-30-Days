QUES:
Largest Divisible Subset.
https://leetcode.com/problems/largest-divisible-subset/description/
Solution:
https://leetcode.com/problems/largest-divisible-subset/submissions/875411408/

class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        // This problem seems like a version of Longest Increasing Subsequence, hence we move forward in that approach.
        int n=nums.size();
        vector<int> ans;
        if(n==0){
            return ans;
        }
        sort(nums.begin(),nums.end());
        int max=1;
        vector<int> dp(n+1,1);
        for(int i=0;i<n;++i){
            for(int j=0;j<i;++j){
                if(nums[i]%nums[j]==0 && 1+dp[j]>dp[i]){
                    dp[i]=1+dp[j];
                    if(max<dp[i]){
                        max=dp[i];
                    }
                }
        }}
        int prev=-1;
        for(int i=n-1;i>=0;i--){
            if (dp[i]==max && (prev%nums[i]==0 || prev== -1)){
                  {
                      ans.push_back(nums[i]);
                      max-=1;
                      prev=nums[i];
                  }  
            }
            
        }
        return ans;
    }
};
