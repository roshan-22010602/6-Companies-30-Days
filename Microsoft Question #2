QUES: Find all valid combinations of k numbers that sum up to n such that the following conditions are true:
Only numbers 1 through 9 are used.
Each number is used at most once.
Return a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.

https://leetcode.com/problems/combination-sum-iii/description/

CODE:
class Solution {
    private:
    void recursive(int index, int sum, int n, vector<vector<int>>& ans, vector<int>& ans2, int k){
        //Base Case
        if(sum==n && k==0 ){
            ans.push_back(ans2);
            return;
        }
        if(sum>n){
            return;
        }
        for(int i=index; i<=9;i++){
            if(i>n){
                break;
            }
            ans2.push_back(i);
            recursive(i+1,sum+i,n,ans,ans2,k-1);
            ans2.pop_back();
        }
    }
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> ans2;
        vector<vector<int>> ans;
        recursive(1,0,n,ans,ans2,k);
        return ans;
        
    }

};


